<!DOCTYPE html>

<html>

<head>
  <title>{{title}} &#10087; celeste</title>

  <link rel="stylesheet" href="/style.css" type="text/css">

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <meta property="og:type" content="website">
  <meta property="og:site_name" content="celeste">
  <meta property="og:title" content="{{title}}">
  <meta property="og:description" content="celeste content">
  <meta property="og:image" content="https://pbs.twimg.com/profile_banners/1252277511746183168/1634157849/1500x500">

  <script src="https://unpkg.com/twemoji@latest/dist/twemoji.min.js" crossorigin="anonymous"></script>
</head>

<body>
  <div id="banners"></div>
  <main>
    {% if title == "index" %}
      <a href="javascript:void" id="dont-go-home" class="go-home">&larr; home</a>
      <p id="dont-go-home-text"/>
    {% else %}
      <a href="/" class="go-home">&larr; home</a>
    {% endif %}
    {{body | safe}}
  </main>

  <script type="module">
    (async () => {
      twemoji.parse(document.body);

      function setCookie (name, value, days) {
        let expires = ""
        if (days) {
          let date = new Date()
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))
          expires = "; expires=" + date.toUTCString()
        }
        document.cookie = name + "=" + (value || "")  + expires + "; path=/"
      }

      function getCookie (name) {
        let nameEQ = name + "="
        let ca = document.cookie.split(';')
        for (let i = 0; i < ca.length; i++) {
          let c = ca[i]
          while (c.charAt(0) == ' ') c = c.substring(1,c.length)
          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length)
        }
        return null
      }

      if (!getCookie('ip')) {
        setCookie('ip', await fetch("https://celeste.exposed/api/ip").then(res => res.text()), 0.25)
      }
    
      await fetch(
        "/api/visited",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            url: window.location.pathname
          })
        }
      )
    })()
    
    import { nanoid } from "https://cdn.jsdelivr.net/npm/nanoid/nanoid.js"

    const randomChoice = list => list[Math.floor(Math.random() * list.length)]

    const celesteTip = () => {
      const id = nanoid()
      const tip = randomChoice([
        "nothing is ever a coincidence",
        "you will never experience this moment again",
        "celeste prefers wet celeste food to dry celeste food",
        "celeste will notice and investigate any change in its environment",
      ])

      document.getElementById("banners").insertAdjacentHTML("beforeend", `
      <div class="banner" id="celeste-tip-${id}">
        &#128161; ${tip}&nbsp;
        <a href="javascript:void" id="celeste-tip-ok-${id}">[ok]</a>
      </div>
      `)
      document.getElementById(`celeste-tip-ok-${id}`).addEventListener(
        "click",
        () => document.getElementById(`celeste-tip-${id}`).style.display = "none",
        true,
      )
    }

    const newMinute = () => {
      const id = nanoid()

      document.getElementById("banners").insertAdjacentHTML("beforeend", `
      <div class="banner" id="new-minute-${id}">
        a new minute has dawned&nbsp;
        <a href="javascript:void" id="new-minute-ok-${id}">[ok]</a>
        <a href="javascript:void" onclick="alert('You cannot cancel the passage of time.')">[cancel]</a>
      </div>
      `)
      document.getElementById(`new-minute-ok-${id}`).addEventListener(
        "click",
        () => document.getElementById(`new-minute-${id}`).style.display = "none",
        true,
      )
    }

    if (Math.random() > 0.8) setTimeout(celesteTip, Math.random() * 5000 + 2000)

    const delay = 60000 - new Date().getTime() % 60000
    setTimeout(
      () => {
        newMinute()
        setInterval(newMinute, 60000)
      },
      delay,
    )
  </script>
</body>

</html>
