<!DOCTYPE html>

<html>
<head>
  <title>poll ({{id}}) - celeste</title>
  <link rel="stylesheet" href="/style.css" type="text/css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="twitter:card" content="player">
  <meta name="twitter:title" content="poll {{id}} - celeste">
  <meta name="twitter:description" content=
  "click to expand this poll">
  <meta name="twitter:site" content="@0x49fa98">
  <meta name="twitter:image" content=
  "https://pbs.twimg.com/profile_banners/1252277511746183168/1634157849/1500x500">
  <meta name="twitter:player" content=
  "https://celeste.exposed/poll/{{id}}">
  <meta name="twitter:player:width" content="1080">
  <meta name="twitter:player:height" content="720">
</head>

<body>
  {% for option in data.votes %}
    <div>
      <input type="radio" id="option-{{loop.index}}" name="poll">
      <label for="option-{{loop.index}}">
        <span id="name-{{loop.index}}">{{option.name}}</span>
        <span id="votes-{{loop.index}}" style="display: none; color: #777;"></span>
      </label>
    </div>
  {% endfor %}
  <button id="submit-poll" style="margin-top: 1em;">submit &amp; see results</button>
  <script type="text/javascript">
    const pollID = "{{id}}";
    let fingerprint;
    import("https://openfpcdn.io/fingerprintjs/v3")
      .then(FingerprintJS => FingerprintJS.load())
      .then(fp => fp.get())
      .then(result => {
        fingerprint = result.visitorId;
        fetch("/api/poll/voted", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            poll_id: pollID,
            fingerprint
          })
        }).then(async reponse => {
          const { voted } = await response.json();
          if (voted) { submit(); }
        });
      });

      function submit() {
        fetch(`/api/poll/get/${pollID}`).then(response => response.json()).then(data => {
          const { votes } = data.poll;
          const totalVotes = votes.reduce((acc, cur) => acc + cur.votes, 0);

          const options = document.getElementsByName("poll");
          for (const [index, option] of options.entries()) {
            const voteSpan = document.getElementById(`votes-${index - 1}`);

            if (option.checked) {
              fetch("/api/poll/vote", {
                method: "POST",
                credentials: "omit",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  poll_id: pollID,
                  option: document.getElementById(`name-${index}`).innerHTML,
                  fingerprint
                })
              });
            }

            try {
              voteSpan.innerText = `[${votes[index].votes}/${totalVotes}]`;
              voteSpan.style.display = "inline";
            } catch { }
          }

          document.getElementById("submit-poll").style.display = "none";
        })
      }

      document.getElementById("submit-poll").onclick = () => submit();
  </script>
</body>
</html>
